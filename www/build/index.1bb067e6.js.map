{"mappings":"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","sources":["<anon>","js/main.js","js/vec.js","js/cardTool.js","js/domUtils.js","js/cardAnimation.js","js/math.js","js/cardCollectionTool.js"],"sourcesContent":["class $40fc1d077ade7fc8$export$ac4bca90992eed1 {\n    constructor(x, y){\n        if (x === null) {\n            this.x = 0;\n            this.y = 0;\n        } else {\n            this.x = x;\n            this.y = y;\n        }\n    }\n    clone() {\n        return new $40fc1d077ade7fc8$export$ac4bca90992eed1(this.x, this.y);\n    }\n    toString() {\n        return `(${this.x}, ${this.y})`;\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    normalize() {\n        const length = this.length();\n        this.x = this.x / length;\n        this.y = this.y / length;\n        return this;\n    }\n    norm() {\n        const length = this.length();\n        return new $40fc1d077ade7fc8$export$ac4bca90992eed1(this.x / length, this.y / length);\n    }\n    scale(scale) {\n        return new $40fc1d077ade7fc8$export$ac4bca90992eed1(this.x * scale, this.y * scale);\n    }\n    static dot(a, b) {\n        return a.x * b.x + a.y * b.y;\n    }\n    static cross(a, b) {\n        return new $40fc1d077ade7fc8$export$838423f3adec30fa(0, 0, a.x * b.y - a.y * b.x);\n    }\n    static add(a, b) {\n        return new $40fc1d077ade7fc8$export$ac4bca90992eed1(a.x + b.x, a.y + b.y);\n    }\n    static sub(a, b) {\n        return new $40fc1d077ade7fc8$export$ac4bca90992eed1(a.x - b.x, a.y - b.y);\n    }\n    static equal(a, b) {\n        return a.x === b.x && a.y === b.y;\n    }\n}\n$40fc1d077ade7fc8$export$ac4bca90992eed1.Zero = new $40fc1d077ade7fc8$export$ac4bca90992eed1(0, 0);\n$40fc1d077ade7fc8$export$ac4bca90992eed1.Up = new $40fc1d077ade7fc8$export$ac4bca90992eed1(0, 1);\n$40fc1d077ade7fc8$export$ac4bca90992eed1.Right = new $40fc1d077ade7fc8$export$ac4bca90992eed1(1, 0);\nclass $40fc1d077ade7fc8$export$838423f3adec30fa {\n    constructor(x, y, z){\n        if (x === null) {\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n        } else {\n            this.x = x;\n            this.y = y;\n            this.z = z;\n        }\n    }\n    toString() {\n        return `(${this.x}, ${this.y}, ${this.z})`;\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    normalize() {\n        const length = this.length();\n        this.x = this.x / length;\n        this.y = this.y / length;\n        this.z = this.z / length;\n        return this;\n    }\n    norm() {\n        const length = this.length();\n        return new $40fc1d077ade7fc8$export$838423f3adec30fa(this.x / length, this.y / length, this.z / length);\n    }\n    scale(scale) {\n        return new $40fc1d077ade7fc8$export$838423f3adec30fa(this.x * scale, this.y * scale, this.z * scale);\n    }\n    static dot(a, b) {\n        return a.x * b.x + a.y * b.y + a.z * b.z;\n    }\n    static cross(a, b) {\n        return new $40fc1d077ade7fc8$export$838423f3adec30fa(a.y * b.z - a.z * b.y, a.z * b.x - a.x * b.z, a.x * b.y - a.y * b.x);\n    }\n    static add(a, b) {\n        return new $40fc1d077ade7fc8$export$838423f3adec30fa(a.x + b.x, a.y + b.y, a.z + b.z);\n    }\n    static sub(a, b) {\n        return new $40fc1d077ade7fc8$export$838423f3adec30fa(a.x - b.x, a.y - b.y, a.z - b.z);\n    }\n    static equal(a, b) {\n        return a.x === b.x && a.y === b.y && a.z === b.z;\n    }\n}\n$40fc1d077ade7fc8$export$838423f3adec30fa.Zero = new $40fc1d077ade7fc8$export$838423f3adec30fa(0, 0, 0);\n$40fc1d077ade7fc8$export$838423f3adec30fa.Up = new $40fc1d077ade7fc8$export$838423f3adec30fa(0, 1, 0);\n$40fc1d077ade7fc8$export$838423f3adec30fa.Down = new $40fc1d077ade7fc8$export$838423f3adec30fa(0, -1, 0);\n$40fc1d077ade7fc8$export$838423f3adec30fa.Left = new $40fc1d077ade7fc8$export$838423f3adec30fa(-1, 0, 0);\n$40fc1d077ade7fc8$export$838423f3adec30fa.Right = new $40fc1d077ade7fc8$export$838423f3adec30fa(1, 0, 0);\n$40fc1d077ade7fc8$export$838423f3adec30fa.Forward = new $40fc1d077ade7fc8$export$838423f3adec30fa(0, 0, -1);\n$40fc1d077ade7fc8$export$838423f3adec30fa.Backward = new $40fc1d077ade7fc8$export$838423f3adec30fa(0, 0, 1);\n\n\n\n\nlet $d8d1267846f126ff$var$nextUniqueId = 1;\nfunction $d8d1267846f126ff$export$8b15d37bc3f197d4() {\n    const id = `id-${$d8d1267846f126ff$var$nextUniqueId.toString(16)}`;\n    $d8d1267846f126ff$var$nextUniqueId += 1;\n    return id;\n}\nfunction $d8d1267846f126ff$export$f12349273d662298(customStyle) {\n    const className = `${customStyle.className}-${$d8d1267846f126ff$export$8b15d37bc3f197d4()}`;\n    var style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.innerHTML = `${customStyle.className ? `.${className}` : \"\"} ${customStyle.id ? `#${customStyle.id}` : \"\"} { ${customStyle.content} }`;\n    document.getElementsByTagName(\"head\")[0].appendChild(style);\n    return className;\n}\nclass $d8d1267846f126ff$export$2cf684e818bac055 {\n    constructor(targetElement){\n        let box = targetElement.getBoundingClientRect();\n        this.targetElement = targetElement;\n        this.top = box.top + window.pageYOffset;\n        this.right = box.right + window.pageXOffset;\n        this.bottom = box.bottom + window.pageYOffset;\n        this.left = box.left + window.pageXOffset;\n        this.centerPosition = new (0, $40fc1d077ade7fc8$export$ac4bca90992eed1)(box.left + window.pageXOffset + (box.right - box.left) / 2, box.top + window.pageYOffset + (box.bottom - box.top) / 2);\n        this.width = box.right - box.left;\n        this.height = box.top - box.bottom;\n    }\n    Recompute() {\n        let box = this.targetElement.getBoundingClientRect();\n        this.top = box.top + window.pageYOffset;\n        this.right = box.right + window.pageXOffset;\n        this.bottom = box.bottom + window.pageYOffset;\n        this.left = box.left + window.pageXOffset;\n        this.centerPosition.x = box.left + window.pageXOffset + (box.right - box.left) / 2;\n        this.centerPosition.y = box.top + window.pageYOffset + (box.bottom - box.top) / 2;\n        this.width = box.right - box.left;\n        this.height = box.top - box.bottom;\n    }\n    Contains(position) {\n        return position.x > this.left && position.x < this.right && position.y > this.top && position.y < this.bottom;\n    }\n}\n\n\n\n\nclass $cb1b9efbe9b1b9d8$export$b48b438cc953f482 {\n}\n$cb1b9efbe9b1b9d8$export$b48b438cc953f482.EaseInOut = {\n    p1x: 0.32,\n    p1y: 0.0,\n    p2x: 0.5,\n    p2y: 1\n};\n$cb1b9efbe9b1b9d8$export$b48b438cc953f482.Linear = {\n    p1x: .32,\n    p1y: .32,\n    p2x: .75,\n    p2y: .75\n};\n$cb1b9efbe9b1b9d8$export$b48b438cc953f482.DefaultBezierParams = {\n    p1x: 0.5,\n    p1y: 0.5,\n    p2x: 0.5,\n    p2y: 0.5\n};\nfunction $cb1b9efbe9b1b9d8$export$94c2a1b8e24fe1d1(t, params) {\n    const tSquare = t * t;\n    const tCube = tSquare * t;\n    const p1Factor = 3 * tCube - 6 * tSquare + 3 * t;\n    const p2Factor = -3 * tCube + 3 * tSquare;\n    const posX = params.p1x * p1Factor + params.p2x * p2Factor + tCube;\n    const posY = params.p1y * p1Factor + params.p2y * p2Factor + tCube;\n    return new (0, $40fc1d077ade7fc8$export$ac4bca90992eed1)(posX, posY);\n}\nfunction $cb1b9efbe9b1b9d8$export$944dabb2371ca403(t, params) {\n    const tSquare = t * t;\n    const p1Factor = 9 * tSquare - 12 * t + 3;\n    const p2Factor = -9 * tSquare + 6 * t;\n    const posX = params.p1x * p1Factor + params.p2x * p2Factor + 3 * tSquare;\n    const posY = params.p1y * p1Factor + params.p2y * p2Factor + 3 * tSquare;\n    return new (0, $40fc1d077ade7fc8$export$ac4bca90992eed1)(posX, posY);\n}\nfunction $cb1b9efbe9b1b9d8$export$ad824134262aeab6(t, params) {\n    const p1Factor = 18 * t - 12;\n    const p2Factor = -19 * t + 6;\n    const posX = params.p1x * p1Factor + params.p2x * p2Factor + 6 * t;\n    const posY = params.p1y * p1Factor + params.p2y * p2Factor + 6 * t;\n    return new (0, $40fc1d077ade7fc8$export$ac4bca90992eed1)(posX, posY);\n}\n\n\n\nlet $e8fbd882ad426338$var$lastFrameTimeStamp = 0;\nlet $e8fbd882ad426338$var$frameDelay = 0;\nconst $e8fbd882ad426338$var$cardAnimations = [];\nfunction $e8fbd882ad426338$var$cardAnimationCallback(timeStamp) {\n    const currentFrameTimeStamp = performance.now();\n    $e8fbd882ad426338$var$frameDelay = currentFrameTimeStamp - $e8fbd882ad426338$var$lastFrameTimeStamp;\n    $e8fbd882ad426338$var$lastFrameTimeStamp = currentFrameTimeStamp;\n    for(let index = $e8fbd882ad426338$var$cardAnimations.length - 1; index > -1; --index){\n        const animationFinished = $e8fbd882ad426338$var$cardAnimations[index].AnimationFrame($e8fbd882ad426338$var$frameDelay);\n        if (animationFinished) $e8fbd882ad426338$var$cardAnimations.splice(index, 1);\n    }\n    requestAnimationFrame($e8fbd882ad426338$var$cardAnimationCallback);\n}\n$e8fbd882ad426338$var$cardAnimationCallback(performance.now());\nclass $e8fbd882ad426338$var$CardAnimation {\n    constructor(target){\n        this.target = target;\n        this.id = (0, $d8d1267846f126ff$export$8b15d37bc3f197d4)();\n        this.startEvent = new CustomEvent(\"cardAnimationStart\");\n        this.endEvent = new CustomEvent(\"cardAnimationEnd\");\n    }\n    StopAnimation() {\n        const index = $e8fbd882ad426338$var$cardAnimations.findIndex((e)=>e.id === this.id);\n        if (index < 0) return;\n        $e8fbd882ad426338$var$cardAnimations.splice(index, 1);\n        this.target.dispatchEvent(this.endEvent);\n    }\n    AnimationFrame(dt) {\n        throw new Error(\"methode not implemented\");\n    }\n}\nclass $e8fbd882ad426338$export$68b15d06c3d06f5f extends $e8fbd882ad426338$var$CardAnimation {\n    constructor(target, rotationFactor){\n        super(target);\n        this.rotationFactor = rotationFactor;\n        this.duration = 0;\n        this.p0 = (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).Zero.clone();\n        this.p1 = (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).Zero.clone();\n        this.travel = (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).Zero.clone();\n        this.elapsedTime = 0;\n        this.startTime = -1;\n        this.bezierParams = (0, $cb1b9efbe9b1b9d8$export$b48b438cc953f482).DefaultBezierParams;\n        this.direction = (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).Zero.clone();\n        this.id = (0, $d8d1267846f126ff$export$8b15d37bc3f197d4)();\n    }\n    StartAnimation(p0, p1, speed, bezierParams) {\n        this.p0 = p0.clone();\n        this.p1 = p1.clone();\n        const distance = (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).sub(p1, p0).length();\n        this.duration = distance / speed;\n        this.startTime = performance.now() - $e8fbd882ad426338$var$frameDelay;\n        this.elapsedTime = 0;\n        this.travel = (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).sub(p1, p0);\n        this.direction = this.travel.norm();\n        this.bezierParams = bezierParams;\n        if (!$e8fbd882ad426338$var$cardAnimations.find((e)=>e.id === this.id)) $e8fbd882ad426338$var$cardAnimations.push(this);\n        this.target.dispatchEvent(this.startEvent);\n    }\n    AnimationFrame(dt) {\n        this.elapsedTime += dt;\n        if (this.elapsedTime > this.duration || this.duration === 0) {\n            this.target.root.style.left = `${this.p1.x}px`;\n            this.target.root.style.top = `${this.p1.y}px`;\n            this.target.currentPosition = this.p1;\n            this.target.LookToward((0, $40fc1d077ade7fc8$export$ac4bca90992eed1).Zero);\n            this.target.dispatchEvent(this.endEvent);\n            return true;\n        }\n        const t = this.elapsedTime / this.duration;\n        const rotationFactor = this.rotationFactor;\n        const transformedTime = (0, $cb1b9efbe9b1b9d8$export$94c2a1b8e24fe1d1)(t, this.bezierParams);\n        const currentPos = (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).add(this.p0, this.travel.scale(transformedTime.y));\n        this.target.root.style.left = `${currentPos.x}px`;\n        this.target.root.style.top = `${currentPos.y}px`;\n        this.target.currentPosition = currentPos;\n        // this.target.dispatchEvent(new CustomEvent('animationFrame'));\n        const transformedAcceleration = (0, $cb1b9efbe9b1b9d8$export$944dabb2371ca403)(t, this.bezierParams).scale(rotationFactor);\n        this.target.LookToward(this.direction.scale(transformedAcceleration.y));\n        return false;\n    }\n}\nclass $e8fbd882ad426338$export$933d25400e7cc7be extends $e8fbd882ad426338$var$CardAnimation {\n    constructor(target){\n        super(target);\n        this.duration = 0;\n        this.endTime = 0;\n        this.startFaceDown = false;\n        this.elapsedTime = 0;\n    }\n    StartAnimation(startFaceDown, duration) {\n        this.duration = duration;\n        const startTime = performance.now() - $e8fbd882ad426338$var$frameDelay;\n        this.endTime = startTime + duration;\n        this.elapsedTime = 0;\n        this.startFaceDown = startFaceDown;\n        if (!$e8fbd882ad426338$var$cardAnimations.find((e)=>e.id === this.id)) $e8fbd882ad426338$var$cardAnimations.push(this);\n        this.target.dispatchEvent(this.startEvent);\n    }\n    AnimationFrame(dt) {\n        this.elapsedTime += dt;\n        if (this.target.isFlipped === this.startFaceDown && this.elapsedTime >= this.duration / 2) this.target.SetFlip(!this.startFaceDown);\n        if (this.elapsedTime > this.duration || this.duration === 0) {\n            this.target.dispatchEvent(this.endEvent);\n            return true;\n        }\n        // Animation time from 0 to 1\n        let t = this.elapsedTime / this.duration;\n        // from 0 to .5 to 0 (at .5 the card is side way so invisible, finishing at 0 makes it so the content isn't mirrored)\n        t = .5 - Math.abs(t - .5);\n        this.target.SetRotation(t * Math.PI, 0);\n        return false;\n    }\n}\n\n\nfunction $d17c23253d859e11$var$rotatePitchRoll(vec, pitch, roll) {\n    const cp = Math.cos(pitch);\n    const sp = Math.sin(pitch);\n    const cr = Math.cos(roll);\n    const sr = Math.sin(roll);\n    return new (0, $40fc1d077ade7fc8$export$838423f3adec30fa)(vec.x * cp + vec.z * sp, vec.x * sp * sr + vec.y * cr - vec.z * sr * cp, -vec.x * sp * cr + vec.y * sr + vec.z * cp * cr);\n}\nfunction $d17c23253d859e11$export$5f4c79da71562cde(root, options) {\n    const card = root;\n    card.root = root;\n    card.frontItems = Array.from(card.getElementsByClassName(\"front\")).map((e)=>e);\n    card.backItems = Array.from(card.getElementsByClassName(\"back\")).map((e)=>e);\n    card.shadeItems = Array.from(card.getElementsByClassName(\"shade\")).map((e)=>e);\n    card.shineItems = Array.from(card.getElementsByClassName(\"shine\")).map((e)=>e);\n    {\n        const cardItemCollection = Array.from(card.getElementsByClassName(\"card-item\")).map((e)=>e);\n        if (cardItemCollection.length !== 1) throw 'wrong number of element with class \"card-item\"';\n        card.cardItem = cardItemCollection.pop();\n    }\n    {\n        const zoomableCollection = Array.from(card.getElementsByClassName(\"zoom-item\")).map((e)=>e);\n        if (zoomableCollection.length !== 1) throw 'wrong number of element with class \"zoom-item\"';\n        card.zoomElement = zoomableCollection.pop();\n    }\n    card.isFlipped = false;\n    const shadowOffset = {\n        x: options.shadowDistance * (0, $40fc1d077ade7fc8$export$838423f3adec30fa).dot(options.lightDirection, (0, $40fc1d077ade7fc8$export$838423f3adec30fa).Left),\n        y: options.shadowDistance * (0, $40fc1d077ade7fc8$export$838423f3adec30fa).dot(options.lightDirection, (0, $40fc1d077ade7fc8$export$838423f3adec30fa).Down)\n    };\n    card.cardItem.style.filter = `drop-shadow(${shadowOffset.x}px ${shadowOffset.y}px 5px black)`;\n    const shadeDirection = new (0, $40fc1d077ade7fc8$export$838423f3adec30fa)(-options.lightDirection.x, -options.lightDirection.y, options.lightDirection.z);\n    card.SetPosition = (position)=>{\n        card.lerpAnimator.StopAnimation();\n        card.root.style.left = `${position.x}px`;\n        card.root.style.top = `${position.y}px`;\n        card.currentPosition = position.clone();\n    };\n    card.LookToward = (position)=>{\n        const atanX = Math.atan2(Math.abs(position.x), options.simHeight);\n        const angleX = position.x === 0 ? 0 : position.x > 0 ? atanX : -atanX;\n        const atanY = Math.atan2(Math.abs(position.y), options.simHeight);\n        const angleY = position.y === 0 ? 0 : position.y > 0 ? -atanY : atanY;\n        card.SetRotation(angleX, angleY);\n    };\n    card.SetRotation = (ax, ay)=>{\n        // Rotating a vector up toward the viewer to the inclination of the card.\n        const normal = $d17c23253d859e11$var$rotatePitchRoll((0, $40fc1d077ade7fc8$export$838423f3adec30fa).Backward, ax, ay);\n        const li = Math.pow((0, $40fc1d077ade7fc8$export$838423f3adec30fa).dot(normal, options.lightDirection), options.lightPower);\n        card.cardItem.style.transform = `rotateY(${ax}rad) rotateX(${ay}rad)`;\n        for(let index = 0; index < card.shineItems.length; ++index)card.shineItems[index].style.opacity = `${li * 100}%`;\n        const unLi = Math.pow((0, $40fc1d077ade7fc8$export$838423f3adec30fa).dot(normal, shadeDirection), options.lightPower);\n        for(let index = 0; index < card.shadeItems.length; ++index)card.shadeItems[index].style.opacity = `${unLi * 100}%`;\n    };\n    const smoothTransition = (0, $d8d1267846f126ff$export$f12349273d662298)({\n        className: \"zoomin\",\n        content: \"transition: transform 0.25s ease-out;\"\n    });\n    card.zoomElement.classList.add(smoothTransition);\n    card.SetZoom = (zoom)=>{\n        card.zoomElement.style.transform = `scale(${zoom})`;\n    };\n    card.SetSmoothOrientation = (enabled)=>{\n        if (enabled) {\n            if (!card.cardItem.classList.contains(smoothTransition)) card.cardItem.classList.add(smoothTransition);\n        } else if (card.cardItem.classList.contains(smoothTransition)) card.cardItem.classList.remove(smoothTransition);\n    };\n    card.SetFlip = (isFlipped)=>{\n        for(let index = 0; index < card.frontItems.length; ++index)card.frontItems[index].style.display = isFlipped ? \"none\" : \"\";\n        for(let index = 0; index < card.backItems.length; ++index)card.backItems[index].style.display = isFlipped ? \"\" : \"none\";\n        card.isFlipped = isFlipped;\n    };\n    card.AnimatedFlip = (isFlipped)=>{\n        if (card.isFlipped === isFlipped) return;\n        card.flipAnimator.StartAnimation(card.isFlipped, 1000);\n    };\n    card.lerpAnimator = new (0, $e8fbd882ad426338$export$68b15d06c3d06f5f)(card, 100);\n    card.flipAnimator = new (0, $e8fbd882ad426338$export$933d25400e7cc7be)(card);\n    const bounds = new (0, $d8d1267846f126ff$export$2cf684e818bac055)(card);\n    card.currentPosition = bounds.centerPosition.clone();\n    card.SetFlip(false);\n    return card;\n}\n\n\n\n\n\n\nfunction $1e27693f6f655a69$export$15d9ae2def0aec55(collectionELement, params) {\n    const cardCollection = collectionELement;\n    const itemPoolSize = 100;\n    cardCollection.itemPool = [];\n    cardCollection.itemInUse = [];\n    cardCollection.reservingItem = null;\n    cardCollection.bounds = new (0, $d8d1267846f126ff$export$2cf684e818bac055)(cardCollection);\n    let itemStyle = \"color:white;\";\n    if (params.itemStyle) itemStyle += params.itemStyle;\n    const itemStyleClass = (0, $d8d1267846f126ff$export$f12349273d662298)({\n        className: \"CardCollectionItem\",\n        content: itemStyle\n    });\n    for(let index = 0; index < itemPoolSize; ++index){\n        const pooledItem = document.createElement(\"div\");\n        pooledItem.bounds = new (0, $d8d1267846f126ff$export$2cf684e818bac055)(pooledItem);\n        pooledItem.classList.add(itemStyleClass);\n        cardCollection.itemPool.push(pooledItem);\n    }\n    cardCollection.ReserveSlot = (selector)=>{\n        if (!cardCollection.reservingItem) {\n            const newItem = cardCollection.itemPool.pop();\n            cardCollection.appendChild(newItem);\n            cardCollection.itemInUse.push(newItem);\n            const reservingIndex = selector(cardCollection.itemInUse);\n            const numberOfItems = cardCollection.itemInUse.length;\n            for(let index = numberOfItems - 2; index >= reservingIndex; --index)cardCollection.itemInUse[index + 1].assignedCard = cardCollection.itemInUse[index].assignedCard;\n            cardCollection.reservingItem = cardCollection.itemInUse[reservingIndex];\n            cardCollection.reservingItem.index = reservingIndex;\n            cardCollection.reservingItem.assignedCard = null;\n            cardCollection.bounds.Recompute();\n            cardCollection.SlideAllCardsToAssignedItems();\n        } else {\n            const reservingIndex = selector(cardCollection.itemInUse);\n            const previousEmptyIndex = cardCollection.reservingItem.index;\n            if (reservingIndex !== previousEmptyIndex) {\n                if (reservingIndex > previousEmptyIndex) for(let index = previousEmptyIndex; index < reservingIndex; ++index)cardCollection.itemInUse[index].assignedCard = cardCollection.itemInUse[index + 1].assignedCard;\n                else for(let index = previousEmptyIndex; index > reservingIndex; --index)cardCollection.itemInUse[index].assignedCard = cardCollection.itemInUse[index - 1].assignedCard;\n                cardCollection.reservingItem = cardCollection.itemInUse[reservingIndex];\n                cardCollection.reservingItem.index = reservingIndex;\n                cardCollection.reservingItem.assignedCard = null;\n                cardCollection.SlideAllCardsToAssignedItems();\n            }\n        }\n    };\n    cardCollection.AssignCardToReservation = (card)=>{\n        if (!cardCollection.reservingItem) {\n            console.warn(\"Trying to assign card but no slot reserved!\");\n            return;\n        }\n        cardCollection.reservingItem.assignedCard = card;\n        cardCollection.reservingItem.bounds.Recompute();\n        card.lerpAnimator.StartAnimation(cardCollection.reservingItem.assignedCard.currentPosition, cardCollection.reservingItem.bounds.centerPosition, 1, (0, $cb1b9efbe9b1b9d8$export$b48b438cc953f482).Linear);\n        card.style.zIndex = cardCollection.reservingItem.index.toString();\n        cardCollection.reservingItem = null;\n    };\n    cardCollection.CancelReservation = ()=>{\n        if (!cardCollection.reservingItem) {\n            console.warn(\"Cancelling but there is no reservation\");\n            return;\n        }\n        cardCollection.removeChild(cardCollection.reservingItem);\n        cardCollection.itemInUse.splice(cardCollection.reservingItem.index, 1);\n        cardCollection.reservingItem.assignedCard = null;\n        cardCollection.reservingItem.index = -1;\n        cardCollection.reservingItem.replaceChildren();\n        cardCollection.itemPool.push(cardCollection.reservingItem);\n        cardCollection.reservingItem = null;\n        cardCollection.SlideAllCardsToAssignedItems();\n    };\n    cardCollection.SlideAllCardsToAssignedItems = ()=>{\n        cardCollection.itemInUse.forEach((item, index)=>{\n            if (item.assignedCard) {\n                item.bounds.Recompute();\n                // item.assignedCard.SetPosition(item.bounds.centerPosition);\n                const b = new (0, $d8d1267846f126ff$export$2cf684e818bac055)(item.assignedCard);\n                item.assignedCard.lerpAnimator.StartAnimation(item.assignedCard.currentPosition, item.bounds.centerPosition, 1, (0, $cb1b9efbe9b1b9d8$export$b48b438cc953f482).EaseInOut);\n                item.assignedCard.style.zIndex = index.toString();\n            }\n        });\n    };\n    cardCollection.ContainsCard = (card)=>{\n        return cardCollection.itemInUse.find((el)=>el.assignedCard === card) !== undefined;\n    };\n    cardCollection.DetachCard = (card)=>{\n        const index = cardCollection.itemInUse.findIndex((el)=>el.assignedCard === card);\n        if (index < 0) {\n            console.warn(\"detaching unkown card\");\n            return;\n        }\n        cardCollection.removeChild(cardCollection.itemInUse[index]);\n        cardCollection.itemInUse.splice(index, 1);\n        cardCollection.SlideAllCardsToAssignedItems();\n    };\n    cardCollection.InsertCardInstant = (card, index)=>{\n        const newItem = cardCollection.itemPool.pop();\n        cardCollection.itemInUse.splice(index, 0, newItem);\n        cardCollection.insertBefore(newItem, cardCollection.childNodes[index + 1]);\n        newItem.assignedCard = card;\n        cardCollection.bounds.Recompute();\n        cardCollection.itemInUse.forEach((item)=>{\n            if (!item.assignedCard) return;\n            item.bounds.Recompute();\n            item.assignedCard.SetPosition(item.bounds.centerPosition);\n        });\n    };\n    cardCollection.PushCardInstant = (card)=>{\n        cardCollection.InsertCardInstant(card, cardCollection.itemInUse.length);\n    };\n    return cardCollection;\n}\nfunction $1e27693f6f655a69$export$c91e66ea48b18f27(posX, posY) {\n    const selector = (items)=>{\n        let bestIndex = 0;\n        let bestDistanceSq = Number.MAX_VALUE;\n        for(let index = 0; index < items.length; ++index){\n            items[index].bounds.Recompute();\n            const x = items[index].bounds.centerPosition.x - posX;\n            const y = items[index].bounds.centerPosition.y - posY;\n            const distanceSq = x * x + y * y;\n            if (distanceSq < bestDistanceSq) {\n                bestDistanceSq = distanceSq;\n                bestIndex = index;\n            }\n        }\n        return bestIndex;\n    };\n    return selector;\n}\n\n\nfunction $77ac944da51b7354$var$runMain() {\n    var _a;\n    const board = document.getElementById(\"game-board\");\n    const container = document.getElementById(\"card-root\");\n    let hoveredCardCollection = null;\n    const draggedZindex = 100;\n    function makeCard(rootNode) {\n        const cardClassName = `PresentationCard${(0, $d8d1267846f126ff$export$8b15d37bc3f197d4)()}`;\n        rootNode.classList.add(cardClassName);\n        const cardOptions = {\n            lightDirection: new (0, $40fc1d077ade7fc8$export$838423f3adec30fa)(.15, -1, .25).normalize(),\n            simHeight: 190,\n            lightPower: 1.5,\n            shadowDistance: 5\n        };\n        const presentationCard = (0, $d17c23253d859e11$export$5f4c79da71562cde)(rootNode, cardOptions);\n        presentationCard.LookToward((0, $40fc1d077ade7fc8$export$ac4bca90992eed1).Zero);\n        return presentationCard;\n    }\n    const debugCard = makeCard(container);\n    let draggedObject = null;\n    function startInput(card) {\n        draggedObject = card;\n        if (hoveredCardCollection && hoveredCardCollection.ContainsCard(card)) {\n            hoveredCardCollection.DetachCard(card);\n            hoveredCardCollection.ReserveSlot((0, $1e27693f6f655a69$export$c91e66ea48b18f27)(card.currentPosition.x, card.currentPosition.y));\n        }\n        card.style.zIndex = draggedZindex.toString();\n        debugCard.SetSmoothOrientation(false);\n    }\n    function endInput() {\n        if (draggedObject) {\n            draggedObject.style.zIndex = (draggedZindex - 1).toString();\n            if (hoveredCardCollection) hoveredCardCollection.AssignCardToReservation(draggedObject);\n            draggedObject = null;\n        }\n    }\n    function setupCardInput(targetCard) {\n        targetCard.root.addEventListener(\"mousedown\", (_)=>{\n            startInput(targetCard);\n        });\n        targetCard.root.addEventListener(\"touchstart\", (ev)=>{\n            const target = ev.target;\n            startInput(target);\n        }, false);\n        targetCard.root.addEventListener(\"touchcancel\", (ev)=>{\n            endInput();\n        }, false);\n        targetCard.root.addEventListener(\"touchend\", (ev)=>{\n            endInput();\n        }, false);\n    }\n    setupCardInput(debugCard);\n    function DetachCardFromAnyCollection(card) {\n        allCardCollections.forEach((collection)=>{\n            if (collection.ContainsCard(card)) collection.DetachCard(card);\n        });\n    }\n    const testButton = document.getElementById(\"slide-button\");\n    const targets = document.getElementById(\"slide-test\").getElementsByClassName(\"target\");\n    let currentIndex = 0;\n    testButton.addEventListener(\"click\", (_ev)=>{\n        currentIndex = (currentIndex + 1) % targets.length;\n        const targetPosition = new (0, $d8d1267846f126ff$export$2cf684e818bac055)(targets.item(currentIndex));\n        DetachCardFromAnyCollection(debugCard);\n        debugCard.lerpAnimator.StartAnimation(debugCard.currentPosition, targetPosition.centerPosition, .65, (0, $cb1b9efbe9b1b9d8$export$b48b438cc953f482).EaseInOut);\n    });\n    function boardMove(card, posX, posY) {\n        const startPosition = new (0, $d8d1267846f126ff$export$2cf684e818bac055)(card.root);\n        const start = startPosition.centerPosition;\n        const end = new (0, $40fc1d077ade7fc8$export$ac4bca90992eed1)(posX, posY);\n        const travelLength = (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).sub(end, start).length();\n        const lerpLowerBound = 45;\n        const lerpUpperBound = 180;\n        const minSpeed = .8;\n        const maxSpeed = 2.7;\n        // Computing the distance versus the lower upper bound (if distance is low keep the low speed, speedup as distance is high)\n        let lp = (travelLength - lerpLowerBound) / (lerpUpperBound - lerpLowerBound);\n        // clamping between 0 and 1\n        if (lp < 0) lp = 0;\n        else if (lp > 1) lp = 1;\n        // Applying a ramp\n        lp = lp * lp;\n        // converting to speed\n        const lerpedSpeed = (maxSpeed - minSpeed) * lp + minSpeed;\n        card.lerpAnimator.StartAnimation(start, end, lerpedSpeed, (0, $cb1b9efbe9b1b9d8$export$b48b438cc953f482).Linear);\n    }\n    board.addEventListener(\"mousemove\", (event)=>{\n        if (draggedObject) boardMove(draggedObject, event.clientX, event.clientY);\n    });\n    board.addEventListener(\"touchmove\", (event)=>{\n        if (draggedObject) {\n            const target = event.targetTouches[0];\n            boardMove(draggedObject, target.clientX, target.clientY - 150);\n        }\n    });\n    board.addEventListener(\"mouseup\", ()=>{\n        endInput();\n    });\n    const testCards = [];\n    for(let index = 0; index < 10; ++index){\n        const element = debugCard.cloneNode(true);\n        board.appendChild(element);\n        const testCard = makeCard(element);\n        testCard.lerpAnimator.StartAnimation(testCard.currentPosition, (0, $40fc1d077ade7fc8$export$ac4bca90992eed1).add(testCard.currentPosition, new (0, $40fc1d077ade7fc8$export$ac4bca90992eed1)(index * 30, 0)), .5, (0, $cb1b9efbe9b1b9d8$export$b48b438cc953f482).EaseInOut);\n        setupCardInput(testCard);\n        testCards.push(testCard);\n    }\n    const cardCollectionParams = {\n        itemStyle: \"width : 5em; height: 5em\"\n    };\n    const allCardCollections = [];\n    const allCardCollectionElements = document.getElementsByClassName(\"card-collection\");\n    for(let index = 0; index < allCardCollectionElements.length; ++index){\n        const element = allCardCollectionElements.item(index);\n        allCardCollections.push((0, $1e27693f6f655a69$export$15d9ae2def0aec55)(element, cardCollectionParams));\n    }\n    board.addEventListener(\"mousemove\", (ev)=>{\n        const mousePosition = new (0, $40fc1d077ade7fc8$export$ac4bca90992eed1)(ev.clientX, ev.clientY);\n        let currentHoveredCollection = null;\n        for(let index = 0; index < allCardCollections.length; ++index){\n            const collection = allCardCollections[index];\n            if (collection.bounds.Contains(mousePosition)) {\n                currentHoveredCollection = collection;\n                break;\n            }\n        }\n        if (currentHoveredCollection !== hoveredCardCollection) {\n            if (hoveredCardCollection && hoveredCardCollection.reservingItem) hoveredCardCollection.CancelReservation();\n            hoveredCardCollection = currentHoveredCollection;\n        }\n        if (currentHoveredCollection && draggedObject) currentHoveredCollection.ReserveSlot((0, $1e27693f6f655a69$export$c91e66ea48b18f27)(ev.clientX, ev.clientY));\n    });\n    {\n        const cardCollectionElement = document.getElementById(\"mock-collection\");\n        const cardCollection = cardCollectionElement;\n        testCards.forEach((el)=>{\n            cardCollection.PushCardInstant(el);\n        });\n    }\n    {\n        const flipCollection = document.getElementById(\"flip-collection\");\n        (_a = document.getElementById(\"flip-button\")) === null || _a === void 0 || _a.addEventListener(\"click\", (ev)=>{\n            flipCollection.itemInUse.forEach((item)=>{\n                if (item.assignedCard) item.assignedCard.AnimatedFlip(!item.assignedCard.isFlipped);\n            });\n        });\n    }\n}\nwindow.addEventListener(\"load\", ()=>{\n    $77ac944da51b7354$var$runMain();\n});\n\n\n//# sourceMappingURL=index.1bb067e6.js.map\n","import { Vec2, Vec3 } from './vec';\nimport { addCardPresentationCapability } from './cardTool';\nimport { uniqueId, BoundingRect } from './domUtils';\nimport { BezierPreset } from './math';\nimport { setupCardCollection, SelectClosestItemSelector } from './cardCollectionTool';\nfunction runMain() {\n    var _a;\n    const board = document.getElementById('game-board');\n    const container = document.getElementById('card-root');\n    let hoveredCardCollection = null;\n    const draggedZindex = 100;\n    function makeCard(rootNode) {\n        const cardClassName = `PresentationCard${uniqueId()}`;\n        rootNode.classList.add(cardClassName);\n        const cardOptions = {\n            lightDirection: (new Vec3(.15, -1, .25)).normalize(),\n            simHeight: 190,\n            lightPower: 1.5,\n            shadowDistance: 5\n        };\n        const presentationCard = addCardPresentationCapability(rootNode, cardOptions);\n        presentationCard.LookToward(Vec2.Zero);\n        return presentationCard;\n    }\n    const debugCard = makeCard(container);\n    let draggedObject = null;\n    function startInput(card) {\n        draggedObject = card;\n        if (hoveredCardCollection && hoveredCardCollection.ContainsCard(card)) {\n            hoveredCardCollection.DetachCard(card);\n            hoveredCardCollection.ReserveSlot(SelectClosestItemSelector(card.currentPosition.x, card.currentPosition.y));\n        }\n        card.style.zIndex = draggedZindex.toString();\n        debugCard.SetSmoothOrientation(false);\n    }\n    function endInput() {\n        if (draggedObject) {\n            draggedObject.style.zIndex = (draggedZindex - 1).toString();\n            if (hoveredCardCollection) {\n                hoveredCardCollection.AssignCardToReservation(draggedObject);\n            }\n            draggedObject = null;\n        }\n    }\n    function setupCardInput(targetCard) {\n        targetCard.root.addEventListener('mousedown', (_) => {\n            startInput(targetCard);\n        });\n        targetCard.root.addEventListener(\"touchstart\", (ev) => {\n            const target = ev.target;\n            startInput(target);\n        }, false);\n        targetCard.root.addEventListener(\"touchcancel\", (ev) => {\n            endInput();\n        }, false);\n        targetCard.root.addEventListener(\"touchend\", (ev) => {\n            endInput();\n        }, false);\n    }\n    setupCardInput(debugCard);\n    function DetachCardFromAnyCollection(card) {\n        allCardCollections.forEach(collection => {\n            if (collection.ContainsCard(card)) {\n                collection.DetachCard(card);\n            }\n        });\n    }\n    const testButton = document.getElementById('slide-button');\n    const targets = document.getElementById('slide-test').getElementsByClassName('target');\n    let currentIndex = 0;\n    testButton.addEventListener('click', (_ev) => {\n        currentIndex = (currentIndex + 1) % targets.length;\n        const targetPosition = new BoundingRect(targets.item(currentIndex));\n        DetachCardFromAnyCollection(debugCard);\n        debugCard.lerpAnimator.StartAnimation(debugCard.currentPosition, targetPosition.centerPosition, .65, BezierPreset.EaseInOut);\n    });\n    function boardMove(card, posX, posY) {\n        const startPosition = new BoundingRect(card.root);\n        const start = startPosition.centerPosition;\n        const end = new Vec2(posX, posY);\n        const travelLength = Vec2.sub(end, start).length();\n        const lerpLowerBound = 45;\n        const lerpUpperBound = 180;\n        const minSpeed = .8;\n        const maxSpeed = 2.7;\n        // Computing the distance versus the lower upper bound (if distance is low keep the low speed, speedup as distance is high)\n        let lp = (travelLength - lerpLowerBound) / (lerpUpperBound - lerpLowerBound);\n        // clamping between 0 and 1\n        if (lp < 0) {\n            lp = 0;\n        }\n        else if (lp > 1) {\n            lp = 1;\n        }\n        // Applying a ramp\n        lp = lp * lp;\n        // converting to speed\n        const lerpedSpeed = (maxSpeed - minSpeed) * lp + minSpeed;\n        card.lerpAnimator.StartAnimation(start, end, lerpedSpeed, BezierPreset.Linear);\n    }\n    board.addEventListener('mousemove', (event) => {\n        if (draggedObject) {\n            boardMove(draggedObject, event.clientX, event.clientY);\n        }\n    });\n    board.addEventListener('touchmove', (event) => {\n        if (draggedObject) {\n            const target = event.targetTouches[0];\n            boardMove(draggedObject, target.clientX, target.clientY - 150);\n        }\n    });\n    board.addEventListener('mouseup', () => {\n        endInput();\n    });\n    const testCards = [];\n    for (let index = 0; index < 10; ++index) {\n        const element = debugCard.cloneNode(true);\n        board.appendChild(element);\n        const testCard = makeCard(element);\n        testCard.lerpAnimator.StartAnimation(testCard.currentPosition, Vec2.add(testCard.currentPosition, new Vec2(index * 30, 0)), .5, BezierPreset.EaseInOut);\n        setupCardInput(testCard);\n        testCards.push(testCard);\n    }\n    const cardCollectionParams = {\n        itemStyle: \"width : 5em; height: 5em\",\n    };\n    const allCardCollections = [];\n    const allCardCollectionElements = document.getElementsByClassName('card-collection');\n    for (let index = 0; index < allCardCollectionElements.length; ++index) {\n        const element = allCardCollectionElements.item(index);\n        allCardCollections.push(setupCardCollection(element, cardCollectionParams));\n    }\n    board.addEventListener('mousemove', (ev) => {\n        const mousePosition = new Vec2(ev.clientX, ev.clientY);\n        let currentHoveredCollection = null;\n        for (let index = 0; index < allCardCollections.length; ++index) {\n            const collection = allCardCollections[index];\n            if (collection.bounds.Contains(mousePosition)) {\n                currentHoveredCollection = collection;\n                break;\n            }\n        }\n        if (currentHoveredCollection !== hoveredCardCollection) {\n            if (hoveredCardCollection && hoveredCardCollection.reservingItem) {\n                hoveredCardCollection.CancelReservation();\n            }\n            hoveredCardCollection = currentHoveredCollection;\n        }\n        if (currentHoveredCollection && draggedObject) {\n            currentHoveredCollection.ReserveSlot(SelectClosestItemSelector(ev.clientX, ev.clientY));\n        }\n    });\n    {\n        const cardCollectionElement = document.getElementById('mock-collection');\n        const cardCollection = cardCollectionElement;\n        testCards.forEach((el) => {\n            cardCollection.PushCardInstant(el);\n        });\n    }\n    {\n        const flipCollection = document.getElementById('flip-collection');\n        (_a = document.getElementById('flip-button')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', ev => {\n            flipCollection.itemInUse.forEach(item => {\n                if (item.assignedCard) {\n                    item.assignedCard.AnimatedFlip(!item.assignedCard.isFlipped);\n                }\n            });\n        });\n    }\n}\nwindow.addEventListener('load', () => {\n    runMain();\n});\n","class Vec2 {\n    constructor(x, y) {\n        if (x === null) {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            this.x = x;\n            this.y = y;\n        }\n    }\n    clone() {\n        return new Vec2(this.x, this.y);\n    }\n    toString() {\n        return `(${this.x}, ${this.y})`;\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    normalize() {\n        const length = this.length();\n        this.x = this.x / length;\n        this.y = this.y / length;\n        return this;\n    }\n    norm() {\n        const length = this.length();\n        return new Vec2(this.x / length, this.y / length);\n    }\n    scale(scale) {\n        return new Vec2(this.x * scale, this.y * scale);\n    }\n    static dot(a, b) {\n        return a.x * b.x + a.y * b.y;\n    }\n    static cross(a, b) {\n        return new Vec3(0, 0, a.x * b.y - a.y * b.x);\n    }\n    static add(a, b) {\n        return new Vec2(a.x + b.x, a.y + b.y);\n    }\n    static sub(a, b) {\n        return new Vec2(a.x - b.x, a.y - b.y);\n    }\n    static equal(a, b) {\n        return a.x === b.x && a.y === b.y;\n    }\n}\nVec2.Zero = new Vec2(0, 0);\nVec2.Up = new Vec2(0, 1);\nVec2.Right = new Vec2(1, 0);\nclass Vec3 {\n    constructor(x, y, z) {\n        if (x === null) {\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n        }\n        else {\n            this.x = x;\n            this.y = y;\n            this.z = z;\n        }\n    }\n    toString() {\n        return `(${this.x}, ${this.y}, ${this.z})`;\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    normalize() {\n        const length = this.length();\n        this.x = this.x / length;\n        this.y = this.y / length;\n        this.z = this.z / length;\n        return this;\n    }\n    norm() {\n        const length = this.length();\n        return new Vec3(this.x / length, this.y / length, this.z / length);\n    }\n    scale(scale) {\n        return new Vec3(this.x * scale, this.y * scale, this.z * scale);\n    }\n    static dot(a, b) {\n        return a.x * b.x + a.y * b.y + a.z * b.z;\n    }\n    static cross(a, b) {\n        return new Vec3(a.y * b.z - a.z * b.y, a.z * b.x - a.x * b.z, a.x * b.y - a.y * b.x);\n    }\n    static add(a, b) {\n        return new Vec3(a.x + b.x, a.y + b.y, a.z + b.z);\n    }\n    static sub(a, b) {\n        return new Vec3(a.x - b.x, a.y - b.y, a.z - b.z);\n    }\n    static equal(a, b) {\n        return a.x === b.x && a.y === b.y && a.z === b.z;\n    }\n}\nVec3.Zero = new Vec3(0, 0, 0);\nVec3.Up = new Vec3(0, 1, 0);\nVec3.Down = new Vec3(0, -1, 0);\nVec3.Left = new Vec3(-1, 0, 0);\nVec3.Right = new Vec3(1, 0, 0);\nVec3.Forward = new Vec3(0, 0, -1);\nVec3.Backward = new Vec3(0, 0, 1);\nexport { Vec2, Vec3 };\n","import { Vec3 } from './vec';\nimport { addCustomStyle, BoundingRect } from './domUtils';\nimport { CardLerpAnimation, CardFlipAnimation } from './cardAnimation';\nfunction rotatePitchRoll(vec, pitch, roll) {\n    const cp = Math.cos(pitch);\n    const sp = Math.sin(pitch);\n    const cr = Math.cos(roll);\n    const sr = Math.sin(roll);\n    return new Vec3(vec.x * cp + vec.z * sp, vec.x * sp * sr + vec.y * cr - vec.z * sr * cp, -vec.x * sp * cr + vec.y * sr + vec.z * cp * cr);\n}\nfunction addCardPresentationCapability(root, options) {\n    const card = root;\n    card.root = root;\n    card.frontItems = Array.from(card.getElementsByClassName('front')).map(e => e);\n    card.backItems = Array.from(card.getElementsByClassName('back')).map(e => e);\n    card.shadeItems = Array.from(card.getElementsByClassName('shade')).map(e => e);\n    card.shineItems = Array.from(card.getElementsByClassName('shine')).map(e => e);\n    {\n        const cardItemCollection = Array.from(card.getElementsByClassName('card-item')).map(e => e);\n        if (cardItemCollection.length !== 1) {\n            throw 'wrong number of element with class \"card-item\"';\n        }\n        card.cardItem = cardItemCollection.pop();\n    }\n    {\n        const zoomableCollection = Array.from(card.getElementsByClassName('zoom-item')).map(e => e);\n        if (zoomableCollection.length !== 1) {\n            throw 'wrong number of element with class \"zoom-item\"';\n        }\n        card.zoomElement = zoomableCollection.pop();\n    }\n    card.isFlipped = false;\n    const shadowOffset = {\n        x: options.shadowDistance * Vec3.dot(options.lightDirection, Vec3.Left),\n        y: options.shadowDistance * Vec3.dot(options.lightDirection, Vec3.Down)\n    };\n    card.cardItem.style.filter = `drop-shadow(${shadowOffset.x}px ${shadowOffset.y}px 5px black)`;\n    const shadeDirection = new Vec3(-options.lightDirection.x, -options.lightDirection.y, options.lightDirection.z);\n    card.SetPosition = (position) => {\n        card.lerpAnimator.StopAnimation();\n        card.root.style.left = `${position.x}px`;\n        card.root.style.top = `${position.y}px`;\n        card.currentPosition = position.clone();\n    };\n    card.LookToward = (position) => {\n        const atanX = Math.atan2(Math.abs(position.x), options.simHeight);\n        const angleX = position.x === 0 ? 0 : position.x > 0 ? atanX : -atanX;\n        const atanY = Math.atan2(Math.abs(position.y), options.simHeight);\n        const angleY = position.y === 0 ? 0 : position.y > 0 ? -atanY : atanY;\n        card.SetRotation(angleX, angleY);\n    };\n    card.SetRotation = (ax, ay) => {\n        // Rotating a vector up toward the viewer to the inclination of the card.\n        const normal = rotatePitchRoll(Vec3.Backward, ax, ay);\n        const li = Math.pow(Vec3.dot(normal, options.lightDirection), options.lightPower);\n        card.cardItem.style.transform = `rotateY(${ax}rad) rotateX(${ay}rad)`;\n        for (let index = 0; index < card.shineItems.length; ++index) {\n            card.shineItems[index].style.opacity = `${li * 100}%`;\n        }\n        const unLi = Math.pow(Vec3.dot(normal, shadeDirection), options.lightPower);\n        for (let index = 0; index < card.shadeItems.length; ++index) {\n            card.shadeItems[index].style.opacity = `${unLi * 100}%`;\n        }\n    };\n    const smoothTransition = addCustomStyle({\n        className: \"zoomin\",\n        content: \"transition: transform 0.25s ease-out;\"\n    });\n    card.zoomElement.classList.add(smoothTransition);\n    card.SetZoom = (zoom) => {\n        card.zoomElement.style.transform = `scale(${zoom})`;\n    };\n    card.SetSmoothOrientation = (enabled) => {\n        if (enabled) {\n            if (!card.cardItem.classList.contains(smoothTransition)) {\n                card.cardItem.classList.add(smoothTransition);\n            }\n        }\n        else {\n            if (card.cardItem.classList.contains(smoothTransition)) {\n                card.cardItem.classList.remove(smoothTransition);\n            }\n        }\n    };\n    card.SetFlip = (isFlipped) => {\n        for (let index = 0; index < card.frontItems.length; ++index) {\n            card.frontItems[index].style.display = isFlipped ? 'none' : '';\n        }\n        for (let index = 0; index < card.backItems.length; ++index) {\n            card.backItems[index].style.display = isFlipped ? '' : 'none';\n        }\n        card.isFlipped = isFlipped;\n    };\n    card.AnimatedFlip = (isFlipped) => {\n        if (card.isFlipped === isFlipped) {\n            return;\n        }\n        card.flipAnimator.StartAnimation(card.isFlipped, 1000);\n    };\n    card.lerpAnimator = new CardLerpAnimation(card, 100);\n    card.flipAnimator = new CardFlipAnimation(card);\n    const bounds = new BoundingRect(card);\n    card.currentPosition = bounds.centerPosition.clone();\n    card.SetFlip(false);\n    return card;\n}\nexport { addCardPresentationCapability, CardLerpAnimation };\n","import { Vec2 } from './vec';\nlet nextUniqueId = 1;\nfunction uniqueId() {\n    const id = `id-${nextUniqueId.toString(16)}`;\n    nextUniqueId += 1;\n    return id;\n}\nfunction addCustomStyle(customStyle) {\n    const className = `${customStyle.className}-${uniqueId()}`;\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = `${customStyle.className ? `.${className}` : ''} ${customStyle.id ? `#${customStyle.id}` : ''} { ${customStyle.content} }`;\n    document.getElementsByTagName('head')[0].appendChild(style);\n    return className;\n}\nclass BoundingRect {\n    constructor(targetElement) {\n        let box = targetElement.getBoundingClientRect();\n        this.targetElement = targetElement;\n        this.top = box.top + window.pageYOffset;\n        this.right = box.right + window.pageXOffset;\n        this.bottom = box.bottom + window.pageYOffset;\n        this.left = box.left + window.pageXOffset;\n        this.centerPosition = new Vec2(box.left + window.pageXOffset + (box.right - box.left) / 2, box.top + window.pageYOffset + (box.bottom - box.top) / 2);\n        this.width = box.right - box.left;\n        this.height = box.top - box.bottom;\n    }\n    Recompute() {\n        let box = this.targetElement.getBoundingClientRect();\n        this.top = box.top + window.pageYOffset;\n        this.right = box.right + window.pageXOffset;\n        this.bottom = box.bottom + window.pageYOffset;\n        this.left = box.left + window.pageXOffset;\n        this.centerPosition.x = box.left + window.pageXOffset + (box.right - box.left) / 2;\n        this.centerPosition.y = box.top + window.pageYOffset + (box.bottom - box.top) / 2;\n        this.width = box.right - box.left;\n        this.height = box.top - box.bottom;\n    }\n    Contains(position) {\n        return position.x > this.left && position.x < this.right && position.y > this.top && position.y < this.bottom;\n    }\n}\nexport { uniqueId, addCustomStyle, BoundingRect };\n","import { Vec2 } from './vec';\nimport { BezierPreset, cubicInterpolationBezier, cubicInterpolationBezierFirstDerivative } from './math';\nimport { uniqueId } from './domUtils';\nlet lastFrameTimeStamp = 0;\nlet frameDelay = 0;\nconst cardAnimations = [];\nfunction cardAnimationCallback(timeStamp) {\n    const currentFrameTimeStamp = performance.now();\n    frameDelay = currentFrameTimeStamp - lastFrameTimeStamp;\n    lastFrameTimeStamp = currentFrameTimeStamp;\n    for (let index = cardAnimations.length - 1; index > -1; --index) {\n        const animationFinished = cardAnimations[index].AnimationFrame(frameDelay);\n        if (animationFinished) {\n            cardAnimations.splice(index, 1);\n        }\n    }\n    requestAnimationFrame(cardAnimationCallback);\n}\ncardAnimationCallback(performance.now());\nclass CardAnimation {\n    constructor(target) {\n        this.target = target;\n        this.id = uniqueId();\n        this.startEvent = new CustomEvent('cardAnimationStart');\n        this.endEvent = new CustomEvent('cardAnimationEnd');\n    }\n    StopAnimation() {\n        const index = cardAnimations.findIndex(e => e.id === this.id);\n        if (index < 0) {\n            return;\n        }\n        cardAnimations.splice(index, 1);\n        this.target.dispatchEvent(this.endEvent);\n    }\n    AnimationFrame(dt) {\n        throw new Error(\"methode not implemented\");\n    }\n}\nclass CardLerpAnimation extends CardAnimation {\n    constructor(target, rotationFactor) {\n        super(target);\n        this.rotationFactor = rotationFactor;\n        this.duration = 0;\n        this.p0 = Vec2.Zero.clone();\n        this.p1 = Vec2.Zero.clone();\n        this.travel = Vec2.Zero.clone();\n        this.elapsedTime = 0;\n        this.startTime = -1;\n        this.bezierParams = BezierPreset.DefaultBezierParams;\n        this.direction = Vec2.Zero.clone();\n        this.id = uniqueId();\n    }\n    ;\n    StartAnimation(p0, p1, speed, bezierParams) {\n        this.p0 = p0.clone();\n        this.p1 = p1.clone();\n        const distance = (Vec2.sub(p1, p0).length());\n        this.duration = distance / speed;\n        this.startTime = performance.now() - frameDelay;\n        this.elapsedTime = 0;\n        this.travel = Vec2.sub(p1, p0);\n        this.direction = this.travel.norm();\n        this.bezierParams = bezierParams;\n        if (!cardAnimations.find((e) => e.id === this.id)) {\n            cardAnimations.push(this);\n        }\n        this.target.dispatchEvent(this.startEvent);\n    }\n    AnimationFrame(dt) {\n        this.elapsedTime += dt;\n        if (this.elapsedTime > this.duration || this.duration === 0) {\n            this.target.root.style.left = `${this.p1.x}px`;\n            this.target.root.style.top = `${this.p1.y}px`;\n            this.target.currentPosition = this.p1;\n            this.target.LookToward(Vec2.Zero);\n            this.target.dispatchEvent(this.endEvent);\n            return true;\n        }\n        const t = this.elapsedTime / this.duration;\n        const rotationFactor = this.rotationFactor;\n        const transformedTime = cubicInterpolationBezier(t, this.bezierParams);\n        const currentPos = Vec2.add(this.p0, this.travel.scale(transformedTime.y));\n        this.target.root.style.left = `${currentPos.x}px`;\n        this.target.root.style.top = `${currentPos.y}px`;\n        this.target.currentPosition = currentPos;\n        // this.target.dispatchEvent(new CustomEvent('animationFrame'));\n        const transformedAcceleration = cubicInterpolationBezierFirstDerivative(t, this.bezierParams).scale(rotationFactor);\n        this.target.LookToward(this.direction.scale(transformedAcceleration.y));\n        return false;\n    }\n}\nclass CardFlipAnimation extends CardAnimation {\n    constructor(target) {\n        super(target);\n        this.duration = 0;\n        this.endTime = 0;\n        this.startFaceDown = false;\n        this.elapsedTime = 0;\n    }\n    StartAnimation(startFaceDown, duration) {\n        this.duration = duration;\n        const startTime = performance.now() - frameDelay;\n        this.endTime = startTime + duration;\n        this.elapsedTime = 0;\n        this.startFaceDown = startFaceDown;\n        if (!cardAnimations.find((e) => e.id === this.id)) {\n            cardAnimations.push(this);\n        }\n        this.target.dispatchEvent(this.startEvent);\n    }\n    AnimationFrame(dt) {\n        this.elapsedTime += dt;\n        if (this.target.isFlipped === this.startFaceDown && this.elapsedTime >= (this.duration / 2)) {\n            this.target.SetFlip(!this.startFaceDown);\n        }\n        if (this.elapsedTime > this.duration || this.duration === 0) {\n            this.target.dispatchEvent(this.endEvent);\n            return true;\n        }\n        // Animation time from 0 to 1\n        let t = this.elapsedTime / this.duration;\n        // from 0 to .5 to 0 (at .5 the card is side way so invisible, finishing at 0 makes it so the content isn't mirrored)\n        t = .5 - Math.abs(t - .5);\n        this.target.SetRotation(t * Math.PI, 0);\n        return false;\n    }\n}\nexport { CardFlipAnimation, CardLerpAnimation };\n","import { Vec2 } from './vec';\nclass BezierPreset {\n}\nBezierPreset.EaseInOut = {\n    p1x: 0.32,\n    p1y: 0.0,\n    p2x: 0.5,\n    p2y: 1\n};\nBezierPreset.Linear = {\n    p1x: .32,\n    p1y: .32,\n    p2x: .75,\n    p2y: .75\n};\nBezierPreset.DefaultBezierParams = {\n    p1x: 0.5,\n    p1y: 0.5,\n    p2x: 0.5,\n    p2y: 0.5,\n};\nfunction cubicInterpolationBezier(t, params) {\n    const tSquare = t * t;\n    const tCube = tSquare * t;\n    const p1Factor = (3 * tCube - 6 * tSquare + 3 * t);\n    const p2Factor = (-3 * tCube + 3 * tSquare);\n    const posX = params.p1x * p1Factor + params.p2x * p2Factor + tCube;\n    const posY = params.p1y * p1Factor + params.p2y * p2Factor + tCube;\n    return new Vec2(posX, posY);\n}\nfunction cubicInterpolationBezierFirstDerivative(t, params) {\n    const tSquare = t * t;\n    const p1Factor = (9 * tSquare - 12 * t + 3);\n    const p2Factor = (-9 * tSquare + 6 * t);\n    const posX = params.p1x * p1Factor + params.p2x * p2Factor + 3 * tSquare;\n    const posY = params.p1y * p1Factor + params.p2y * p2Factor + 3 * tSquare;\n    return new Vec2(posX, posY);\n}\nfunction cubicInterpolationBezierSecondDerivative(t, params) {\n    const p1Factor = (18 * t - 12);\n    const p2Factor = (-19 * t + 6);\n    const posX = params.p1x * p1Factor + params.p2x * p2Factor + 6 * t;\n    const posY = params.p1y * p1Factor + params.p2y * p2Factor + 6 * t;\n    return new Vec2(posX, posY);\n}\nexport { BezierPreset, cubicInterpolationBezier, cubicInterpolationBezierFirstDerivative, cubicInterpolationBezierSecondDerivative };\n","import { addCustomStyle, BoundingRect } from './domUtils';\nimport { BezierPreset } from './math';\nfunction setupCardCollection(collectionELement, params) {\n    const cardCollection = collectionELement;\n    const itemPoolSize = 100;\n    cardCollection.itemPool = [];\n    cardCollection.itemInUse = [];\n    cardCollection.reservingItem = null;\n    cardCollection.bounds = new BoundingRect(cardCollection);\n    let itemStyle = \"color:white;\";\n    if (params.itemStyle) {\n        itemStyle += params.itemStyle;\n    }\n    const itemStyleClass = addCustomStyle({\n        className: \"CardCollectionItem\",\n        content: itemStyle,\n    });\n    for (let index = 0; index < itemPoolSize; ++index) {\n        const pooledItem = document.createElement('div');\n        pooledItem.bounds = new BoundingRect(pooledItem);\n        pooledItem.classList.add(itemStyleClass);\n        cardCollection.itemPool.push(pooledItem);\n    }\n    cardCollection.ReserveSlot = (selector) => {\n        if (!cardCollection.reservingItem) {\n            const newItem = cardCollection.itemPool.pop();\n            cardCollection.appendChild(newItem);\n            cardCollection.itemInUse.push(newItem);\n            const reservingIndex = selector(cardCollection.itemInUse);\n            const numberOfItems = cardCollection.itemInUse.length;\n            for (let index = numberOfItems - 2; index >= reservingIndex; --index) {\n                cardCollection.itemInUse[index + 1].assignedCard = cardCollection.itemInUse[index].assignedCard;\n            }\n            cardCollection.reservingItem = cardCollection.itemInUse[reservingIndex];\n            cardCollection.reservingItem.index = reservingIndex;\n            cardCollection.reservingItem.assignedCard = null;\n            cardCollection.bounds.Recompute();\n            cardCollection.SlideAllCardsToAssignedItems();\n        }\n        else {\n            const reservingIndex = selector(cardCollection.itemInUse);\n            const previousEmptyIndex = cardCollection.reservingItem.index;\n            if (reservingIndex !== previousEmptyIndex) {\n                if (reservingIndex > previousEmptyIndex) {\n                    for (let index = previousEmptyIndex; index < (reservingIndex); ++index) {\n                        cardCollection.itemInUse[index].assignedCard = cardCollection.itemInUse[index + 1].assignedCard;\n                    }\n                }\n                else {\n                    for (let index = previousEmptyIndex; index > (reservingIndex); --index) {\n                        cardCollection.itemInUse[index].assignedCard = cardCollection.itemInUse[index - 1].assignedCard;\n                    }\n                }\n                cardCollection.reservingItem = cardCollection.itemInUse[reservingIndex];\n                cardCollection.reservingItem.index = reservingIndex;\n                cardCollection.reservingItem.assignedCard = null;\n                cardCollection.SlideAllCardsToAssignedItems();\n            }\n        }\n    };\n    cardCollection.AssignCardToReservation = (card) => {\n        if (!cardCollection.reservingItem) {\n            console.warn('Trying to assign card but no slot reserved!');\n            return;\n        }\n        cardCollection.reservingItem.assignedCard = card;\n        cardCollection.reservingItem.bounds.Recompute();\n        card.lerpAnimator.StartAnimation(cardCollection.reservingItem.assignedCard.currentPosition, cardCollection.reservingItem.bounds.centerPosition, 1, BezierPreset.Linear);\n        card.style.zIndex = cardCollection.reservingItem.index.toString();\n        cardCollection.reservingItem = null;\n    };\n    cardCollection.CancelReservation = () => {\n        if (!cardCollection.reservingItem) {\n            console.warn('Cancelling but there is no reservation');\n            return;\n        }\n        cardCollection.removeChild(cardCollection.reservingItem);\n        cardCollection.itemInUse.splice(cardCollection.reservingItem.index, 1);\n        cardCollection.reservingItem.assignedCard = null;\n        cardCollection.reservingItem.index = -1;\n        cardCollection.reservingItem.replaceChildren();\n        cardCollection.itemPool.push(cardCollection.reservingItem);\n        cardCollection.reservingItem = null;\n        cardCollection.SlideAllCardsToAssignedItems();\n    };\n    cardCollection.SlideAllCardsToAssignedItems = () => {\n        cardCollection.itemInUse.forEach((item, index) => {\n            if (item.assignedCard) {\n                item.bounds.Recompute();\n                // item.assignedCard.SetPosition(item.bounds.centerPosition);\n                const b = new BoundingRect(item.assignedCard);\n                item.assignedCard.lerpAnimator.StartAnimation(item.assignedCard.currentPosition, item.bounds.centerPosition, 1, BezierPreset.EaseInOut);\n                item.assignedCard.style.zIndex = index.toString();\n            }\n        });\n    };\n    cardCollection.ContainsCard = (card) => {\n        return cardCollection.itemInUse.find((el) => el.assignedCard === card) !== undefined;\n    };\n    cardCollection.DetachCard = (card) => {\n        const index = cardCollection.itemInUse.findIndex((el) => el.assignedCard === card);\n        if (index < 0) {\n            console.warn('detaching unkown card');\n            return;\n        }\n        cardCollection.removeChild(cardCollection.itemInUse[index]);\n        cardCollection.itemInUse.splice(index, 1);\n        cardCollection.SlideAllCardsToAssignedItems();\n    };\n    cardCollection.InsertCardInstant = (card, index) => {\n        const newItem = cardCollection.itemPool.pop();\n        cardCollection.itemInUse.splice(index, 0, newItem);\n        cardCollection.insertBefore(newItem, cardCollection.childNodes[index + 1]);\n        newItem.assignedCard = card;\n        cardCollection.bounds.Recompute();\n        cardCollection.itemInUse.forEach((item) => {\n            if (!item.assignedCard) {\n                return;\n            }\n            item.bounds.Recompute();\n            item.assignedCard.SetPosition(item.bounds.centerPosition);\n        });\n    };\n    cardCollection.PushCardInstant = (card) => {\n        cardCollection.InsertCardInstant(card, cardCollection.itemInUse.length);\n    };\n    return cardCollection;\n}\nfunction SelectClosestItemSelector(posX, posY) {\n    const selector = (items) => {\n        let bestIndex = 0;\n        let bestDistanceSq = Number.MAX_VALUE;\n        for (let index = 0; index < items.length; ++index) {\n            items[index].bounds.Recompute();\n            const x = items[index].bounds.centerPosition.x - posX;\n            const y = items[index].bounds.centerPosition.y - posY;\n            const distanceSq = x * x + y * y;\n            if (distanceSq < bestDistanceSq) {\n                bestDistanceSq = distanceSq;\n                bestIndex = index;\n            }\n        }\n        return bestIndex;\n    };\n    return selector;\n}\nexport { setupCardCollection, SelectClosestItemSelector };\n"],"names":["$40fc1d077ade7fc8$export$ac4bca90992eed1","constructor","x","y","clone","toString","length","Math","sqrt","normalize","norm","scale","dot","a","b","cross","$40fc1d077ade7fc8$export$838423f3adec30fa","add","sub","equal","Zero","Up","Right","z","Down","Left","Forward","Backward","$d8d1267846f126ff$var$nextUniqueId","$d8d1267846f126ff$export$8b15d37bc3f197d4","id","$d8d1267846f126ff$export$f12349273d662298","customStyle","className","style","document","createElement","type","innerHTML","content","getElementsByTagName","appendChild","$d8d1267846f126ff$export$2cf684e818bac055","targetElement","box","getBoundingClientRect","top","window","pageYOffset","right","pageXOffset","bottom","left","centerPosition","width","height","Recompute","Contains","position","$cb1b9efbe9b1b9d8$export$b48b438cc953f482","EaseInOut","p1x","p1y","p2x","p2y","Linear","DefaultBezierParams","$e8fbd882ad426338$var$lastFrameTimeStamp","$e8fbd882ad426338$var$frameDelay","$e8fbd882ad426338$var$cardAnimations","$e8fbd882ad426338$var$cardAnimationCallback","timeStamp","currentFrameTimeStamp","performance","now","index","animationFinished","AnimationFrame","splice","requestAnimationFrame","$e8fbd882ad426338$var$CardAnimation","target","startEvent","CustomEvent","endEvent","StopAnimation","findIndex","e","dispatchEvent","dt","Error","$e8fbd882ad426338$export$68b15d06c3d06f5f","rotationFactor","duration","p0","p1","travel","elapsedTime","startTime","bezierParams","direction","StartAnimation","speed","distance","find","push","root","currentPosition","LookToward","t","transformedTime","params","tSquare","tCube","p1Factor","p2Factor","posX","posY","currentPos","transformedAcceleration","$e8fbd882ad426338$export$933d25400e7cc7be","endTime","startFaceDown","isFlipped","SetFlip","abs","SetRotation","PI","$1e27693f6f655a69$export$c91e66ea48b18f27","items","bestIndex","bestDistanceSq","Number","MAX_VALUE","bounds","distanceSq","addEventListener","$77ac944da51b7354$var$runMain","_a","board","getElementById","container","hoveredCardCollection","makeCard","rootNode","cardClassName","classList","cardOptions","lightDirection","simHeight","lightPower","shadowDistance","presentationCard","options","card","frontItems","Array","from","getElementsByClassName","map","backItems","shadeItems","shineItems","cardItemCollection","cardItem","pop","zoomableCollection","zoomElement","shadowOffset","filter","shadeDirection","SetPosition","lerpAnimator","atanX","atan2","angleX","atanY","angleY","ax","ay","normal","$d17c23253d859e11$var$rotatePitchRoll","vec","pitch","roll","cp","cos","sp","sin","cr","sr","li","pow","transform","opacity","unLi","smoothTransition","SetZoom","zoom","SetSmoothOrientation","enabled","contains","remove","display","AnimatedFlip","flipAnimator","debugCard","draggedObject","startInput","ContainsCard","DetachCard","ReserveSlot","zIndex","draggedZindex","endInput","AssignCardToReservation","setupCardInput","targetCard","_","ev","testButton","targets","currentIndex","boardMove","startPosition","start","end","travelLength","lp","lerpUpperBound","lerpedSpeed","maxSpeed","_ev","targetPosition","item","allCardCollections","forEach","collection","event","clientX","clientY","targetTouches","testCards","element","cloneNode","testCard","cardCollectionParams","itemStyle","allCardCollectionElements","collectionELement","cardCollection","itemPool","itemInUse","reservingItem","itemStyleClass","pooledItem","selector","reservingIndex","previousEmptyIndex","assignedCard","SlideAllCardsToAssignedItems","newItem","numberOfItems","console","warn","CancelReservation","removeChild","replaceChildren","undefined","el","InsertCardInstant","insertBefore","childNodes","PushCardInstant","mousePosition","currentHoveredCollection","cardCollectionElement","flipCollection"],"version":3,"file":"index.1bb067e6.js.map"}